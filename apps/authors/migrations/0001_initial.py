# Generated by Django 5.1.4 on 2024-12-15 04:24

import BookBird.mixins
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('languages', '0004_alter_language_native_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('canonical_name', models.TextField(help_text='Canonical name of the author')),
                ('legal_name', models.TextField(blank=True, help_text='Legal name of the author. Should be Family Name, Given Name', null=True)),
                ('last_name', models.TextField(blank=True, db_index=True, help_text='Family name used for sorting (derived from canonical name)', null=True)),
                ('birthplace', models.TextField(blank=True, help_text='Place of birth of the author. Should contain city, state, and country', null=True)),
                ('birth_year', models.IntegerField(blank=True, null=True)),
                ('birth_month', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('birth_day', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('death_year', models.IntegerField(blank=True, null=True)),
                ('death_month', models.IntegerField(blank=True, help_text='Month of death (1-12) if known', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('death_day', models.IntegerField(blank=True, help_text='Day of death (1-31) if known', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('birthdate', models.CharField(blank=True, help_text='Date format: YYYY or YYYY-MM or YYYY-MM-DD', max_length=10, null=True)),
                ('deathdate', models.CharField(blank=True, help_text='Date format: YYYY or YYYY-MM or YYYY-MM-DD', max_length=10, null=True)),
                ('wikipedia_url', models.URLField(blank=True, help_text="URL of the author's Wikipedia page", null=True)),
                ('imdb_url', models.URLField(blank=True, help_text="URL of the author's IMDb page", null=True)),
                ('views', models.PositiveIntegerField(default=0, help_text='Total number of author page views')),
                ('annual_views', models.PositiveIntegerField(default=0, help_text='Number of views in the last year')),
                ('popularity_score', models.PositiveIntegerField(default=0, help_text='Calculated popularity score (0-100)')),
                ('image_url', models.URLField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the author. Supports markdown', null=True)),
                ('isfdb_id', models.PositiveBigIntegerField(blank=True, help_text='ISFDB author ID', null=True, unique=True)),
                ('language', models.ForeignKey(help_text="Primary language of the author's works", null=True, on_delete=django.db.models.deletion.PROTECT, related_name='authors', to='languages.language')),
            ],
            bases=(models.Model, BookBird.mixins.DateComponentsMixin),
        ),
    ]
