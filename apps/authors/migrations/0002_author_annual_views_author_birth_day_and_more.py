# Generated by Django 5.1.4 on 2024-12-14 11:37

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authors', '0001_initial'),
        ('languages', '0003_alter_language_code'),
    ]

    operations = [
        migrations.AddField(
            model_name='author',
            name='annual_views',
            field=models.PositiveIntegerField(default=0, help_text='Number of views in the last year'),
        ),
        migrations.AddField(
            model_name='author',
            name='birth_day',
            field=models.PositiveIntegerField(blank=True, help_text='Day of birth (1-31) if known', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)]),
        ),
        migrations.AddField(
            model_name='author',
            name='birth_month',
            field=models.PositiveIntegerField(blank=True, help_text='Month of birth (1-12) if known', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)]),
        ),
        migrations.AddField(
            model_name='author',
            name='birth_year',
            field=models.PositiveIntegerField(blank=True, help_text='Year of birth (-3000 to future). Use negative values for BC/BCE', null=True, validators=[django.core.validators.MinValueValidator(-3000), django.core.validators.MaxValueValidator(3000)]),
        ),
        migrations.AddField(
            model_name='author',
            name='birthplace',
            field=models.TextField(blank=True, help_text='Place of birth of the author. Should contain city, state, and country', null=True),
        ),
        migrations.AddField(
            model_name='author',
            name='canonical_name',
            field=models.TextField(help_text='Canonical name of the author', null=True),
        ),
        migrations.AddField(
            model_name='author',
            name='death_day',
            field=models.IntegerField(blank=True, help_text='Day of death (1-31) if known', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)]),
        ),
        migrations.AddField(
            model_name='author',
            name='death_month',
            field=models.IntegerField(blank=True, help_text='Month of death (1-12) if known', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)]),
        ),
        migrations.AddField(
            model_name='author',
            name='death_year',
            field=models.IntegerField(blank=True, help_text='Year of death (-3000 to present)', null=True, validators=[django.core.validators.MinValueValidator(-3000), django.core.validators.MaxValueValidator(2024)]),
        ),
        migrations.AddField(
            model_name='author',
            name='image',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='author',
            name='imdb_url',
            field=models.URLField(blank=True, help_text="URL of the author's IMDb page", null=True),
        ),
        migrations.AddField(
            model_name='author',
            name='language',
            field=models.ForeignKey(help_text="Primary language of the author's works", null=True, on_delete=django.db.models.deletion.PROTECT, related_name='authors', to='languages.language'),
        ),
        migrations.AddField(
            model_name='author',
            name='last_name',
            field=models.TextField(blank=True, db_index=True, help_text='Family name used for sorting (derived from canonical name)', null=True),
        ),
        migrations.AddField(
            model_name='author',
            name='legal_name',
            field=models.TextField(blank=True, help_text='Legal name of the author. Should be Family Name, Given Name', null=True),
        ),
        migrations.AddField(
            model_name='author',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes about the author. Supports markdown'),
        ),
        migrations.AddField(
            model_name='author',
            name='popularity_score',
            field=models.PositiveIntegerField(default=0, help_text='Calculated popularity score (0-100)'),
        ),
        migrations.AddField(
            model_name='author',
            name='views',
            field=models.PositiveIntegerField(default=0, help_text='Total number of author page views'),
        ),
        migrations.AddField(
            model_name='author',
            name='wikipedia_url',
            field=models.URLField(blank=True, help_text="URL of the author's Wikipedia page", null=True),
        ),
    ]
