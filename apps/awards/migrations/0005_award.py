# Generated by Django 5.1.4 on 2024-12-17 09:13

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('awards', '0004_awardcategory'),
    ]

    operations = [
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isfdb_id', models.PositiveBigIntegerField(blank=True, db_index=True, help_text='ISFDB ID', null=True, unique=True)),
                ('title', models.TextField(help_text="Title as recorded when award was given. For non-title awards like 'Best Artist', contains 'untitled'", null=True)),
                ('author', models.TextField(blank=True, help_text="Author(s) as recorded when award was given, multiple authors separated by '+'", null=True)),
                ('year', models.TextField(blank=True, help_text='Year the award was given', null=True)),
                ('level', models.PositiveIntegerField(blank=True, choices=[(1, 'Win'), (9, 'Nomination'), (71, 'No Winner - Insufficient Votes'), (72, 'Not on ballot -- Insufficient Nominations'), (73, 'No Award Given This Year'), (81, 'Withdrawn'), (82, 'Withdrawn - Nomination Declined'), (83, 'Withdrawn - Conflict of Interest'), (84, 'Withdrawn - Official Publication in a Previous Year'), (85, 'Withdrawn - Ineligible'), (90, 'Finalists'), (91, 'Made First Ballot'), (92, 'Preliminary Nominee'), (93, 'Honorable Mention'), (98, 'Early Submission'), (99, 'Nomination Below Cutoff')], help_text='1-70: Poll position, 1: Win, 9: Nomination, 71-99: Special statuses like withdrawn/finalists', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('movie_title', models.TextField(blank=True, help_text='IMDB movie title for movie-related awards', null=True)),
                ('category', models.ForeignKey(help_text='Award category (e.g. Best Novel)', on_delete=django.db.models.deletion.CASCADE, related_name='awards', to='awards.awardcategory')),
                ('type', models.ForeignKey(help_text='Award type (e.g. Hugo, Nebula)', on_delete=django.db.models.deletion.CASCADE, related_name='awards', to='awards.awardtype')),
            ],
            options={
                'verbose_name': 'Award',
                'verbose_name_plural': 'Awards',
                'ordering': ['type', 'year', 'category', 'level'],
                'indexes': [models.Index(fields=['isfdb_id'], name='awards_awar_isfdb_i_eed294_idx'), models.Index(fields=['type', 'year'], name='awards_awar_type_id_12c564_idx'), models.Index(fields=['category', 'year'], name='awards_awar_categor_95d000_idx'), models.Index(fields=['level'], name='awards_awar_level_57e41d_idx')],
            },
        ),
    ]
